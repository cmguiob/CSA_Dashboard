scale_color_manual(values = c("#9ACD32", "#C67171",  "#b5b0b0","#CDC9C9", "#E6E1E1"))+
# Optional fills
#scale_fill_OkabeIto(order = c(3,4, 1,2))+
#scale_fill_hue(l = 70, c = 45, h = c(95,360))+
#scale_color_hue(l = 70, c = 45, h = c(95,360))+
guides(fill = guide_legend(override.aes = list(size = 7),
title.position = "bottom",
title = ifelse(dat$option == "Practices",
"* Greyscale: not implemented", "")))+
theme_minimal()+
theme(panel.grid = element_blank(),
#panel.background = element_rect(fill = "#faf9f5", color = "#ECEBE7", size = 1 ),
#plot.background = element_rect(fill = "#faf9f5", color = "#faf9f5"),
strip.background = element_rect(fill = "#ECEBE7", color = "#ECEBE7"),
strip.text.x = element_text(margin = margin(2,0,2,0, "mm"), size = 12, color = "#5D5C58"),
strip.text.y = element_text(margin = margin(0,1.5,0,1.5, "mm"), size = 12, color = "#5D5C58"),
legend.title = element_text(size = 7, margin = margin(5,0,0,0, "mm")),
legend.key.size = unit(1.5, 'lines'),
legend.justification = "top",
legend.position = "left",
legend.text = element_text(size = 10, color = "#5D5C58"),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(size = 10, color = "#B8B7B3", vjust = -2),
plot.margin=unit(c(5,10,10,5), "mm"))
}
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = "Kaffrine", year_1 = 2019, year_2 = 2021)
p_barplot
# Export
#ggsave(file = "p_sankey.png", plot = p_sankey, device = "png", type = "cairo", path = "Input a path from your PC, dpi = 300, width = 9.5, height = 5)
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = "Kaffrine", year_1 = 2015, year_2 = 2021)
p_barplot
# Export
#ggsave(file = "p_sankey.png", plot = p_sankey, device = "png", type = "cairo", path = "Input a path from your PC, dpi = 300, width = 9.5, height = 5)
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = "Kaffrine", year_1 = 2015, year_2 = 2018)
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = "Kaffrine", year_1 = 2019, year_2 = 2020)
p_barplot
# Export
#ggsave(file = "p_sankey.png", plot = p_sankey, device = "png", type = "cairo", path = "Input a path from your PC, dpi = 300, width = 9.5, height = 5)
f_map <- function(dataset = uptake_dat, type, subtype, year_1, year_2){
library(ggplot2)
library(tidyverse)
library(ggrepel)
dataset <- dataset %>%
filter(year >= year_1 & year <= year_2 ,
practice_type == "type",
subtype == subtype)
world_data <- ggplot2::map_data('world')%>%
rename(country = region) %>%
select(-subregion) %>%
filter(country %in% dataset$country)
ggplot(data = world_data,
aes(x = long,
y = lat)) +
geom_polygon(data = world_data,
aes(group = group),
color = "#faf9f5",
fill = "#ECEBE7",
size = 1) +
geom_point(data = dataset,
aes(x = longitude_site,
y = latitude_site),
shape = 19,
size = 3,
alpha = 0.8,
color = "#B8B7B3") +
geom_text_repel(data = dataset %>%
ungroup() %>%
distinct(site, .keep_all = TRUE),
aes(label = site,
x = longitude_site,
y = latitude_site),
size = 5,
fontface = "bold",
box.padding = 0.1,
point.padding = 0.1,
nudge_y = 0,
max.overlaps = Inf,
direction = "both",
xlim = c(-Inf, Inf),
alpha = 0.5) +
guides(color = "none")+
theme_minimal()+
theme(panel.grid = element_blank(),
plot.background = element_rect(fill = "#faf9f5",
color = "#faf9f5"),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin=unit(c(0,20,0,20), "mm"))+
coord_quickmap(clip = "off")
}
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", location = "Kaffrine", year_1 = 2019, year_2 = 2020)
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2020)
p_map
# Export
#ggsave(file = "p_map.png", plot = p_map, device = "png", type = "cairo", path = "Input a path from your PC, dpi = 300, width = 9.5, height = 5)
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021)
p_map
# Export
#ggsave(file = "p_map.png", plot = p_map, device = "png", type = "cairo", path = "Input a path from your PC, dpi = 300, width = 9.5, height = 5)
dataset2 <- utake_dat %>%
filter(year >= year_1 & year <= year_2 ,
practice_type == "type",
subtype == subtype)
dataset2 <- uptake_dat %>%
filter(year >= year_1 & year <= year_2 ,
practice_type == "type",
subtype == subtype)
f_map <- function(dataset = uptake_dat, type, subtype, year_1, year_2){
library(ggplot2)
library(tidyverse)
library(ggrepel)
dataset <- dataset %>%
filter(year >= year_1 & year <= year_2 ,
practice_type == type,
subtype == subtype)
world_data <- ggplot2::map_data('world')%>%
rename(country = region) %>%
select(-subregion) %>%
filter(country %in% dataset$country)
ggplot(data = world_data,
aes(x = long,
y = lat)) +
geom_polygon(data = world_data,
aes(group = group),
color = "#faf9f5",
fill = "#ECEBE7",
size = 1) +
geom_point(data = dataset,
aes(x = longitude_site,
y = latitude_site),
shape = 19,
size = 3,
alpha = 0.8,
color = "#B8B7B3") +
geom_text_repel(data = dataset %>%
ungroup() %>%
distinct(site, .keep_all = TRUE),
aes(label = site,
x = longitude_site,
y = latitude_site),
size = 5,
fontface = "bold",
box.padding = 0.1,
point.padding = 0.1,
nudge_y = 0,
max.overlaps = Inf,
direction = "both",
xlim = c(-Inf, Inf),
alpha = 0.5) +
guides(color = "none")+
theme_minimal()+
theme(panel.grid = element_blank(),
plot.background = element_rect(fill = "#faf9f5",
color = "#faf9f5"),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin=unit(c(0,20,0,20), "mm"))+
coord_quickmap(clip = "off")
}
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021)
p_map
# Export
#ggsave(file = "p_map.png", plot = p_map, device = "png", type = "cairo", path = "Input a path from your PC, dpi = 300, width = 9.5, height = 5)
f_map <- function(dataset = uptake_dat, type, subtype, year_1, year_2, location){
library(ggplot2)
library(tidyverse)
library(ggrepel)
dataset <- dataset %>%
filter(year >= year_1 & year <= year_2 ,
practice_type == type,
subtype == subtype)
if (!missing(location)) {dataset <- dataset %>% filter(site == location)}
world_data <- ggplot2::map_data('world')%>%
rename(country = region) %>%
select(-subregion) %>%
filter(country %in% dataset$country)
ggplot(data = world_data,
aes(x = long,
y = lat)) +
geom_polygon(data = world_data,
aes(group = group),
color = "#faf9f5",
fill = "#ECEBE7",
size = 1) +
geom_point(data = dataset,
aes(x = longitude_site,
y = latitude_site),
shape = 19,
size = 3,
alpha = 0.8,
color = "#B8B7B3") +
geom_text_repel(data = dataset %>%
ungroup() %>%
distinct(site, .keep_all = TRUE),
aes(label = site,
x = longitude_site,
y = latitude_site),
size = 5,
fontface = "bold",
box.padding = 0.1,
point.padding = 0.1,
nudge_y = 0,
max.overlaps = Inf,
direction = "both",
xlim = c(-Inf, Inf),
alpha = 0.5) +
guides(color = "none")+
theme_minimal()+
theme(panel.grid = element_blank(),
plot.background = element_rect(fill = "#faf9f5",
color = "#faf9f5"),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin=unit(c(0,20,0,20), "mm"))+
coord_quickmap(clip = "off")
}
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021)
p_map
# Export
#ggsave(file = "p_map.png", plot = p_map, device = "png", type = "cairo", path = "Input a path from your PC, dpi = 300, width = 9.5, height = 5)
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021, location = "Kaffrine")
p_map
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021)
p_map
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021,
location = c("Kaffrine", "Cinzana"))
p_map
f_map <- function(dataset = uptake_dat, type, subtype, year_1, year_2, location){
library(ggplot2)
library(tidyverse)
library(ggrepel)
# Error messages
if (CSA_category != c("Practices", "Services"))
stop("use either Practices or Services as CSA_category")
if (!type %in% dataset$practice_type)
stop("assign a valid practice type")
if (!subtype %in% dataset$subtype)
stop("assign a valid practice subtype")
dataset <- dataset %>%
filter(option == CSA_category,
year >= year_1 & year <= year_2 ,
practice_type == type,
subtype == subtype)
if (!missing(location)) {dataset <- dataset %>% filter(site == location)}
if (!location %in% dataset$site)
stop("assign a valid site name as location")
world_data <- ggplot2::map_data('world')%>%
rename(country = region) %>%
select(-subregion) %>%
filter(country %in% dataset$country)
ggplot(data = world_data,
aes(x = long,
y = lat)) +
geom_polygon(data = world_data,
aes(group = group),
color = "#faf9f5",
fill = "#ECEBE7",
size = 1) +
geom_point(data = dataset,
aes(x = longitude_site,
y = latitude_site),
shape = 19,
size = 3,
alpha = 0.8,
color = "#B8B7B3") +
geom_text_repel(data = dataset %>%
ungroup() %>%
distinct(site, .keep_all = TRUE),
aes(label = site,
x = longitude_site,
y = latitude_site),
size = 5,
fontface = "bold",
box.padding = 0.1,
point.padding = 0.1,
nudge_y = 0,
max.overlaps = Inf,
direction = "both",
xlim = c(-Inf, Inf),
alpha = 0.5) +
guides(color = "none")+
theme_minimal()+
theme(panel.grid = element_blank(),
# Optional background color as in dashboard
#plot.background = element_rect(fill = "#faf9f5", color = "#faf9f5"),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin=unit(c(0,20,0,20), "mm"))+
coord_quickmap(clip = "off")
}
p_map <- f_map(type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021,
location = c("Kaffrine", "Cinzana"))
p_map <- f_map(CSA_category = "Practices",type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021,
location = c("Kaffrine", "Cinzana"))
f_map <- function(dataset = uptake_dat, CSA_category, type, subtype, year_1, year_2, location){
library(ggplot2)
library(tidyverse)
library(ggrepel)
# Error messages
if (CSA_category != c("Practices", "Services"))
stop("use either Practices or Services as CSA_category")
if (!type %in% dataset$practice_type)
stop("assign a valid practice type")
if (!subtype %in% dataset$subtype)
stop("assign a valid practice subtype")
dataset <- dataset %>%
filter(option == CSA_category,
year >= year_1 & year <= year_2 ,
practice_type == type,
subtype == subtype)
if (!missing(location)) {dataset <- dataset %>% filter(site == location)}
if (!location %in% dataset$site)
stop("assign a valid site name as location")
world_data <- ggplot2::map_data('world')%>%
rename(country = region) %>%
select(-subregion) %>%
filter(country %in% dataset$country)
ggplot(data = world_data,
aes(x = long,
y = lat)) +
geom_polygon(data = world_data,
aes(group = group),
color = "#faf9f5",
fill = "#ECEBE7",
size = 1) +
geom_point(data = dataset,
aes(x = longitude_site,
y = latitude_site),
shape = 19,
size = 3,
alpha = 0.8,
color = "#B8B7B3") +
geom_text_repel(data = dataset %>%
ungroup() %>%
distinct(site, .keep_all = TRUE),
aes(label = site,
x = longitude_site,
y = latitude_site),
size = 5,
fontface = "bold",
box.padding = 0.1,
point.padding = 0.1,
nudge_y = 0,
max.overlaps = Inf,
direction = "both",
xlim = c(-Inf, Inf),
alpha = 0.5) +
guides(color = "none")+
theme_minimal()+
theme(panel.grid = element_blank(),
# Optional background color as in dashboard
#plot.background = element_rect(fill = "#faf9f5", color = "#faf9f5"),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin=unit(c(0,20,0,20), "mm"))+
coord_quickmap(clip = "off")
}
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021, location = c("Kaffrine", "Cinzana"))
p_map
# Export
#ggsave(file = "p_map.png", plot = p_map, device = "png", type = "cairo", path = "Input a path from your PC, dpi = 300, width = 9.5, height = 5)
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021, location = "Kaffine")
p_map
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021, location = "Kaffine")
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021, location = c("Kaffrine", "Cinzana"))
p_map
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Agroforestry fallow", year_1 = 2019, year_2 = 2021)
f_map <- function(dataset = uptake_dat, CSA_category, type, subtype, year_1, year_2, location){
library(ggplot2)
library(tidyverse)
library(ggrepel)
# Error messages
if (CSA_category != c("Practices", "Services"))
stop("use either Practices or Services as CSA_category")
if (!type %in% dataset$practice_type)
stop("assign a valid practice type")
if (!subtype %in% dataset$subtype)
stop("assign a valid practice subtype")
dataset <- dataset %>%
filter(option == CSA_category,
year >= year_1 & year <= year_2 ,
practice_type == type,
subtype == subtype)
if (!missing(location)) {dataset <- dataset %>% filter(site == location)}
if (!location %in% dataset$site)
stop("assign a valid site name as location")
world_data <- ggplot2::map_data('world')%>%
rename(country = region) %>%
select(-subregion) %>%
filter(country %in% dataset$country)
ggplot(data = world_data,
aes(x = long,
y = lat)) +
geom_polygon(data = world_data,
aes(group = group),
color = "#faf9f5",
fill = "#ECEBE7",
size = 1) +
geom_point(data = dataset,
aes(x = longitude_site,
y = latitude_site),
shape = 19,
size = 3,
alpha = 0.8,
color = "#B8B7B3") +
geom_text_repel(data = dataset %>%
ungroup() %>%
distinct(site, .keep_all = TRUE),
aes(label = site,
x = longitude_site,
y = latitude_site),
size = 5,
fontface = "bold",
box.padding = 0.1,
point.padding = 0.1,
nudge_y = 0,
max.overlaps = Inf,
direction = "both",
xlim = c(-Inf, Inf),
alpha = 0.5) +
guides(color = "none")+
theme_minimal()+
theme(panel.grid = element_blank(),
# Optional background color as in dashboard
#plot.background = element_rect(fill = "#faf9f5", color = "#faf9f5"),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin=unit(c(0,20,0,20), "mm"))+
coord_quickmap(clip = "off")
}
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Agroforestry fallow", year_1 = 2019, year_2 = 2021)
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021)
f_map <- function(dataset = uptake_dat, CSA_category, type, subtype, year_1, year_2, location = uptake_dat$site ){
library(ggplot2)
library(tidyverse)
library(ggrepel)
# Error messages
if (CSA_category != c("Practices", "Services"))
stop("use either Practices or Services as CSA_category")
if (!type %in% dataset$practice_type)
stop("assign a valid practice type")
if (!subtype %in% dataset$subtype)
stop("assign a valid practice subtype")
dataset <- dataset %>%
filter(option == CSA_category,
year >= year_1 & year <= year_2 ,
practice_type == type,
subtype == subtype)
if (!missing(location)) {dataset <- dataset %>% filter(site == location)}
if (!location %in% dataset$site)
stop("assign a valid site name as location")
world_data <- ggplot2::map_data('world')%>%
rename(country = region) %>%
select(-subregion) %>%
filter(country %in% dataset$country)
ggplot(data = world_data,
aes(x = long,
y = lat)) +
geom_polygon(data = world_data,
aes(group = group),
color = "#faf9f5",
fill = "#ECEBE7",
size = 1) +
geom_point(data = dataset,
aes(x = longitude_site,
y = latitude_site),
shape = 19,
size = 3,
alpha = 0.8,
color = "#B8B7B3") +
geom_text_repel(data = dataset %>%
ungroup() %>%
distinct(site, .keep_all = TRUE),
aes(label = site,
x = longitude_site,
y = latitude_site),
size = 5,
fontface = "bold",
box.padding = 0.1,
point.padding = 0.1,
nudge_y = 0,
max.overlaps = Inf,
direction = "both",
xlim = c(-Inf, Inf),
alpha = 0.5) +
guides(color = "none")+
theme_minimal()+
theme(panel.grid = element_blank(),
# Optional background color as in dashboard
#plot.background = element_rect(fill = "#faf9f5", color = "#faf9f5"),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin=unit(c(0,20,0,20), "mm"))+
coord_quickmap(clip = "off")
}
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021)
p_map
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021, location = c("Kaffrine", "Cinzana"))
p_map <- f_map(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", year_1 = 2019, year_2 = 2021, location = c("Kaffrine", "Cinzana"))
p_map
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = c("Kaffrine","Cinzana"), year_1 = 2019, year_2 = 2020)
p_barplot
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = c("Kaffrine","Cinzana"), year_1 = 2019, year_2 = 2020)
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = c("Kaffrine","Cinzana"), year_1 = 2019, year_2 = 2020)
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = "Cinzana", year_1 = 2019, year_2 = 2020)
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = "Kaffrine", year_1 = 2019, year_2 = 2020)
p_barplot
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = c("Kaffrine", "Cinzana"), year_1 = 2019, year_2 = 2021)
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = "Cinzana"), year_1 = 2019, year_2 = 2021)
p_barplot <- f_barplot(CSA_category = "Practices", type = "Agroforestry", subtype = "Tree planting", location = "Cinzana", year_1 = 2019, year_2 = 2021)
p_barplot
